buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.0"
  }
}

plugins {
  id "com.jfrog.bintray" version "1.1"
  id "com.ajmath.gradle-s3crets" version "1.1.1"
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'groovy'
apply plugin: 'maven'

s3crets {
  properties "s3://secrets-ajmath/gradle/bintray-publish.properties"
}

repositories {
  jcenter()
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile 'com.amazonaws:aws-java-sdk-s3:1.10.1'
}

version = "1.1.2"
group = 'com.ajmath'

configurations {
  archives
}

task sourceJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives jar, sourceJar
}

ext.plugin_id="com.ajmath.gradle-s3crets"
ext.plugin_display_name="Gradle s3 properties"
ext.plugin_website="https://github.com/ajmath/gradle-s3crets"
ext.plugin_issues="https://github.com/ajmath/gradle-s3crets/issues"
ext.plugin_vcs="https://github.com/ajmath/gradle-s3crets.git"
ext.plugin_desc="Pull gradle properties from s3.  Especially useful for secrets"
ext.plugin_tags=['gradle', 's3', 'secrets']

bintray {
  user = 'ajmath'
  key = "${bintray_apikey}"

  configurations = [ 'archives' ]

  dryRun = false //Whether to run this as dry-run, without deploying
  publish = true //If version should be auto published after an upload
  pkg {
    repo = 'gradle-plugins'
    name = project.name
    desc = plugin_desc
    websiteUrl = plugin_website
    issueTrackerUrl = plugin_issues
    vcsUrl = plugin_vcs
    licenses = ['WTFPL']
    labels = plugin_tags
    publicDownloadNumbers = true
    version {
      name = project.version //Bintray logical version name
      released  = new Date()
      vcsTag = project.version
      attributes = [
        'gradle-plugin': "${plugin_id}:${project.group}:${project.name}"
      ]
      //Optional configuration for GPG signing
      gpg {
        sign = true //Determines whether to GPG sign the files. The default is false
        passphrase = "${bintray_gpgpassphrase}" //Optional. The passphrase for GPG signing'
      }
    }
  }
}

pluginBundle {
  website = plugin_website
  vcsUrl = plugin_vcs
  description = plugin_desc
  tags = plugin_tags
  plugins {
    greetingsPlugin {
      id = plugin_id
      displayName = plugin_display_name
    }
  }
}


task publishAll(dependsOn: ["bintrayUpload", "publishPlugins"])
